#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : cxxfilt
Version  : 0.2.1
Release  : 18
URL      : https://files.pythonhosted.org/packages/75/c9/cbd1aa604996d6713810af63d8fd6d51e63d02938f77b570688f358a970e/cxxfilt-0.2.1.tar.gz
Source0  : https://files.pythonhosted.org/packages/75/c9/cbd1aa604996d6713810af63d8fd6d51e63d02938f77b570688f358a970e/cxxfilt-0.2.1.tar.gz
Summary  : Python interface to c++filt / abi::__cxa_demangle
Group    : Development/Tools
License  : BSD-3-Clause
Requires: cxxfilt-python = %{version}-%{release}
Requires: cxxfilt-python3 = %{version}-%{release}
BuildRequires : buildreq-distutils3

%description
cxxfilt |travis|
================

.. |travis| image:: https://travis-ci.org/afg984/python-cxxfilt.svg?branch=master
    :target: https://travis-ci.org/afg984/python-cxxfilt

Demangling C++ symbols in Python / interface to abi::__cxa_demangle

Usage
-----

Install::

    pip install cxxfilt

Use ``demangle`` to demangle a C++ mangled symbol name::

    >>> import cxxfilt
    >>> cxxfilt.demangle('_ZNSt22condition_variable_anyD2Ev')
    'std::condition_variable_any::~condition_variable_any()'

Non-mangled name will be kept intact::

    >>> cxxfilt.demangle('main')
    'main'

To demangle an internal symbol, use `external_only=False`::

    >>> cxxfilt.demangle('N3foo12BarExceptionE')
    'N3foo12BarExceptionE'
    >>> cxxfilt.demangle('N3foo12BarExceptionE', external_only=False)
    'foo::BarException'

Invalid mangled names will trigger an ``InvalidName`` exception::

    >>> cxxfilt.demangle('_ZQQ')
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "/path/to/python-cxxfilt/cxxfilt/__init__.py", line 77, in demangle
        return demangleb(mangled_name.encode()).decode()
      File "/path/to/python-cxxfilt/cxxfilt/__init__.py", line 69, in demangleb
        raise InvalidName(mangled_name)
    cxxfilt.InvalidName: b'_ZQQ'

Use ``demangleb`` to demangle name in ``bytes``::

    >>> cxxfilt.demangleb(b'_ZNSt22condition_variable_anyD2Ev')
    b'std::condition_variable_any::~condition_variable_any()'


Supported environments
----------------------

Python 2.7 / 3.3+

Tested on Arch Linux and FreeBSD. Should work on unix systems with libc and libc++/libstdc++

Will not work on Windows.

Testing
-------

run in shell::

    pytest

%package python
Summary: python components for the cxxfilt package.
Group: Default
Requires: cxxfilt-python3 = %{version}-%{release}

%description python
python components for the cxxfilt package.


%package python3
Summary: python3 components for the cxxfilt package.
Group: Default
Requires: python3-core
Provides: pypi(cxxfilt)
Requires: pypi(pytest)

%description python3
python3 components for the cxxfilt package.


%prep
%setup -q -n cxxfilt-0.2.1
cd %{_builddir}/cxxfilt-0.2.1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1583333597
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
